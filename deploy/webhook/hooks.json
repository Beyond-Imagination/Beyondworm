# 실제 서버에서는 hooks_temp.json으로 만든 뒤, WEBHOOK_SECRET 환경변수를 설정한 hooks.json을 만들어서 사용
# hooks_temp.json -> hooks.json 변환 스크립트는 없음. 수동으로 변경
# set -a; . ./.env-webhook; set +a
# sed "s|\${WEBHOOK_SECRET}|$WEBHOOK_SECRET|g" hooks_temp.json > hooks.json

# hooks_temp.json
[
  {
    "id": "github",
    "execute-command": "/hooks/deploy.sh",
    "command-working-directory": "/",
    "incoming-payload-content-type": "application/json",
    "include-command-output-in-response": true,
    "pass-arguments-to-command": [
      {
        "source": "header",
        "name": "X-GitHub-Event"
      },
      {
        "source": "header",
        "name": "X-GitHub-Delivery"
      }
    ],
    "trigger-rule": {
      "and": [
        {
          "or": [
            {
              "and": [
                {
                  "match": {
                    "type": "value",
                    "value": "push",
                    "parameter": {
                      "source": "header",
                      "name": "X-GitHub-Event"
                    }
                  }
                },
                {
                  "match": {
                    "type": "value",
                    "value": "refs/heads/main",
                    "parameter": {
                      "source": "payload",
                      "name": "ref"
                    }
                  }
                }
              ]
            },
            {
              "match": {
                "type": "value",
                "value": "ping",
                "parameter": {
                  "source": "header",
                  "name": "X-GitHub-Event"
                }
              }
            }
          ]
        },
        {
          "match": {
            "type": "payload-hmac-sha256",
            "secret": "${WEBHOOK_SECRET}",
            "parameter": {
              "source": "header",
              "name": "X-Hub-Signature-256"
            }
          }
        }
      ]
    }
  }
]
