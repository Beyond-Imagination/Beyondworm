# (이 파일은 보통 /etc/nginx/nginx.conf 의 http { ... } 안에서 include 됩니다)
# WebSocket 핸드셰이크용 'Upgrade/Connection' 처리를 도와주는 map.
# map 은 http 컨텍스트에서 선언해야 하므로 server 블록 '밖'에 둡니다.
map $http_upgrade $connection_upgrade {
    default upgrade;
    ''      close;
}

# 1) HTTP → HTTPS 리다이렉트 (Let's Encrypt HTTP-01 검증도 통과)
server {
    listen 80;
    server_name example.com;   # ← 너의 도메인

    # certbot이 HTTP-01 검증 파일을 내려받을 때 쓰는 표준 경로
    location /.well-known/acme-challenge/ { root /var/www/html; }

    # 그 외 트래픽은 전부 HTTPS로 보냄
    return 301 https://$host$request_uri;
}

# 2) 실제 서비스 (HTTPS)
server {
    listen 443 ssl http2;
    server_name example.com;   # ← 너의 도메인

    # ↓ certbot --nginx 실행 시 여기 ssl_certificate 라인이 자동으로 들어옵니다.
    # ssl_certificate     /etc/letsencrypt/live/example.com/fullchain.pem;
    # ssl_certificate_key /etc/letsencrypt/live/example.com/privkey.pem;

    # ---- 로비 API (클라이언트: https://example.com/api/lobby/...) ----
    # proxy_pass 뒤에 슬래시(/)가 붙었기 때문에:
    #   /api/lobby/로 들어온 경로 접두사만 제거하고 나머지 경로를 8081로 전달합니다.
    #   예) /api/lobby/health  →  127.0.0.1:8081/health
    location /api/lobby/ {
        proxy_pass http://127.0.0.1:8081/;
        proxy_http_version 1.1;                 # HTTP/1.1 유지(커넥션 재사용 등)
        proxy_set_header Host              $host;                 # 원본 Host 유지(로그/백엔드 로직)
        proxy_set_header X-Real-IP         $remote_addr;          # 클라이언트 실제 IP
        proxy_set_header X-Forwarded-For   $proxy_add_x_forwarded_for;  # 프록시 체인
        proxy_set_header X-Forwarded-Proto https;                 # 원본 요청이 HTTPS였음을 전달
        proxy_read_timeout 60s;                                    # API 응답 대기 시간
    }

    # ---- 게임 WebSocket (클라이언트: wss://example.com/ws/...) ----
    # WebSocket은 처음엔 HTTP로 시작해서 '업그레이드(Upgrade)'로 프로토콜을 바꿉니다.
    # 그래서 Upgrade/Connection 헤더를 반드시 넘겨줘야 합니다.
    # 아래 설정은 /ws/ 경로로 들어온 모든 요청을 7200으로 그대로 전달합니다.
    #   (업스트림이 '/ws/...' 경로를 그대로 기대한다고 가정)
    location /ws/ {
        proxy_pass http://127.0.0.1:7200;     # ← 경로를 '그대로' 전달 (접두사 제거 없음)
        proxy_http_version 1.1;
        proxy_set_header Upgrade           $http_upgrade;     # ★ WS 업그레이드 핵심
        proxy_set_header Connection        $connection_upgrade; # ★ 위 map으로 계산
        proxy_set_header Host              $host;
        proxy_set_header X-Real-IP         $remote_addr;
        proxy_set_header X-Forwarded-For   $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto https;
        proxy_read_timeout 120s;                               # WS는 장시간 연결이므로 여유
        proxy_buffering off;                                   # WS 스트림은 버퍼링 끄는 게 안전
    }

    # ---- (선택) GitHub Webhook ----
    # hooks.json의 "id"와 URL 끝 경로가 반드시 같아야 합니다. (예: "id":"github" → /hooks/github)
    location = /hooks/github {
        proxy_pass           http://127.0.0.1:9000/hooks/github;
        proxy_set_header     Host              $host;
        proxy_set_header     X-Forwarded-Proto https;
        proxy_set_header     X-Forwarded-For   $proxy_add_x_forwarded_for;
        client_max_body_size 2m;              # GitHub 페이로드 여유치
        proxy_read_timeout   60s;
    }
}
